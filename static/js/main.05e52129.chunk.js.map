{"version":3,"sources":["components/List.jsx","components/App.jsx","index.js"],"names":["List","props","React","createElement","onClick","storeClick","id","item","App","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","items","setItems","deleteItem","preValue","filter","part","index","className","onChange","event","newValue","target","value","type","prevItems","concat","_toConsumableArray","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"wKASeA,MAPf,SAAcC,GAKZ,OAAOC,IAAAC,cAAA,MAAIC,QAAS,kBAAMH,EAAMI,WAAWJ,EAAMK,MAAML,EAAMM,OC+ChDC,MAnDf,WACE,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAA0BL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GActB,SAASG,EAAWb,GAMlBY,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAAMC,GAC5B,OAAOA,IAAUjB,QAKvB,OACEJ,IAAAC,cAAA,OAAKqB,UAAU,aACbtB,IAAAC,cAAA,OAAKqB,UAAU,WACbtB,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKqB,UAAU,QACbtB,IAAAC,cAAA,SAAOsB,SA/Bb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9Bf,EAAaa,IA6BsBG,KAAK,OAAOD,MAAOhB,IAClDX,IAAAC,cAAA,UAAQC,QA3Bd,WACEc,GAAS,SAACa,GACR,MAAM,GAANC,OAAAC,YAAWF,GAAS,CAAElB,OAExBC,EAAa,MAwBPZ,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGc,EAAMiB,KAAI,SAACC,EAAUZ,GAAK,OACzBrB,IAAAC,cAACH,EAAI,CAACO,KAAM4B,EAAU9B,WAAYc,EAAYb,GAAIiB,WC1C9Da,IAASC,OAAOnC,IAAAC,cAACK,EAAG,MAAK8B,SAASC,eAAe,U","file":"static/js/main.05e52129.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction List(props) {\r\n  //passing id back to delete function to show which id item is clicked\r\n  //Execute id on render (so using below)\r\n  // return <li onClick={props.storeClick(props.id)}> {props.item} </li>;\r\n\r\n  return <li onClick={() => props.storeClick(props.id)}>{props.item}</li>;\r\n}\r\nexport default List;\r\n","import React, { useState } from \"react\";\nimport List from \"./List\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    // const result = items.filter((part, index) => index !== id);\n    // setItems(result);\n\n    // OR\n\n    setItems((preValue) => {\n      return preValue.filter((part, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <List item={todoItem} storeClick={deleteItem} id={index} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}